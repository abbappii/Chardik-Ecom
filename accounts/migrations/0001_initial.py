# Generated by Django 4.0.5 on 2022-07-31 17:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=300, null=True, unique=True, verbose_name='Username')),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log in this site', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active .      Unselected this instead of deleting accounts', verbose_name='active')),
                ('password', models.CharField(max_length=1500, null=True)),
                ('confirm_password', models.CharField(max_length=1500, null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('permission_name', models.CharField(max_length=100, null=True, verbose_name='Permission Name')),
            ],
            options={
                'verbose_name_plural': 'User Permission',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('full_name', models.CharField(blank=True, max_length=264, null=True)),
                ('dob', models.DateField(blank=True, max_length=8, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_image')),
                ('address', models.TextField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('phone_otp', models.CharField(blank=True, max_length=7, null=True)),
                ('customer_ID', models.CharField(editable=False, max_length=20, null=True, unique=True, verbose_name='Customer ID')),
                ('points_gained', models.IntegerField(default=0)),
                ('permission', models.ManyToManyField(to='accounts.userpermission')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(max_length=300, null=True, verbose_name='Region Name')),
                ('city', models.CharField(max_length=300, null=True, verbose_name='City Name')),
                ('area', models.CharField(blank=True, max_length=500, null=True, verbose_name='Area Name')),
                ('post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('address', models.TextField(null=True, verbose_name='Address')),
                ('is_billing', models.BooleanField(default=False, verbose_name='Is Billing Address')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.profile', verbose_name='Customer Name')),
            ],
            options={
                'verbose_name_plural': 'Shipping Address',
            },
        ),
    ]
